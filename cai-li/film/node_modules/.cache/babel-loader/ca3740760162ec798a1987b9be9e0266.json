{"ast":null,"code":"var _jsxFileName = \"/Users/cai/Documents/GA/cai-li/film/src/components/FilmRow/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilmRow = _ref => {\n  _s();\n\n  let {\n    film,\n    faveFilms,\n    handleSelectDetail,\n    handleSelectFave\n  } = _ref;\n\n  const isFave = film => {\n    if (faveFilms.filter(item => {\n      return item.id === film.id;\n    })) return 'remove_from_queue';\n    return 'add_to_queue';\n  };\n\n  console.log(isFave);\n  const [isSelectFave, setIsSelectFave] = useState(isFave);\n  const releaseDate = new Date(film.release_date);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FilmRow\",\n      onClick: () => handleSelectDetail(film),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w780${film.poster_path}`,\n        alt: \"{film.title} film poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"film-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: releaseDate.getFullYear()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fave\",\n        onClick: () => handleSelectFave(film, isSelectFave, setIsSelectFave),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons\",\n          children: isSelectFave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FilmRow, \"xCbSNOM8vpoQbu8gEp7I5NEZ18g=\");\n\n_c = FilmRow;\nexport default FilmRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmRow\");","map":{"version":3,"names":["React","useState","FilmRow","film","faveFilms","handleSelectDetail","handleSelectFave","isFave","filter","item","id","console","log","isSelectFave","setIsSelectFave","releaseDate","Date","release_date","poster_path","title","getFullYear"],"sources":["/Users/cai/Documents/GA/cai-li/film/src/components/FilmRow/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\n\nconst FilmRow = ({ film,faveFilms, handleSelectDetail, handleSelectFave }) => {\n  const isFave = (film) => {\n    if (faveFilms.filter((item) => {\n     return item.id === film.id\n   })) return 'remove_from_queue';\n   return 'add_to_queue';\n }\n console.log(isFave)\n\n  const [isSelectFave, setIsSelectFave] = useState(isFave);\n\n  const releaseDate = new Date(film.release_date);\n  return (\n    <>\n      <div className=\"FilmRow\" onClick={() => handleSelectDetail(film)}>\n        <img\n          src={`https://image.tmdb.org/t/p/w780${film.poster_path}`}\n          alt=\"{film.title} film poster\"\n        />\n        <div className=\"film-summary\">\n          <h3>{film.title}</h3>\n          <p>{releaseDate.getFullYear()}</p>\n        </div>\n        <button className=\"fave\" onClick={() => handleSelectFave(film, isSelectFave, setIsSelectFave)}>\n          <span className=\"material-icons\">{isSelectFave}</span>\n        </button>\n      </div>\n    </>\n  );\n};\nexport default FilmRow;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;;AAEA,MAAMC,OAAO,GAAG,QAA8D;EAAA;;EAAA,IAA7D;IAAEC,IAAF;IAAOC,SAAP;IAAkBC,kBAAlB;IAAsCC;EAAtC,CAA6D;;EAC5E,MAAMC,MAAM,GAAIJ,IAAD,IAAU;IACvB,IAAIC,SAAS,CAACI,MAAV,CAAkBC,IAAD,IAAU;MAC9B,OAAOA,IAAI,CAACC,EAAL,KAAYP,IAAI,CAACO,EAAxB;IACD,CAFI,CAAJ,EAEG,OAAO,mBAAP;IACJ,OAAO,cAAP;EACD,CALA;;EAMDC,OAAO,CAACC,GAAR,CAAYL,MAAZ;EAEC,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAACM,MAAD,CAAhD;EAEA,MAAMQ,WAAW,GAAG,IAAIC,IAAJ,CAASb,IAAI,CAACc,YAAd,CAApB;EACA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,SAAf;MAAyB,OAAO,EAAE,MAAMZ,kBAAkB,CAACF,IAAD,CAA1D;MAAA,wBACE;QACE,GAAG,EAAG,kCAAiCA,IAAI,CAACe,WAAY,EAD1D;QAEE,GAAG,EAAC;MAFN;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,cAAf;QAAA,wBACE;UAAA,UAAKf,IAAI,CAACgB;QAAV;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAIJ,WAAW,CAACK,WAAZ;QAAJ;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eASE;QAAQ,SAAS,EAAC,MAAlB;QAAyB,OAAO,EAAE,MAAMd,gBAAgB,CAACH,IAAD,EAAOU,YAAP,EAAqBC,eAArB,CAAxD;QAAA,uBACE;UAAM,SAAS,EAAC,gBAAhB;UAAA,UAAkCD;QAAlC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAiBD,CA7BD;;GAAMX,O;;KAAAA,O;AA8BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}