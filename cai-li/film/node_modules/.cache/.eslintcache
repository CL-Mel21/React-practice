[{"/Users/cai/Documents/GA/cai-li/film/src/index.js":"1","/Users/cai/Documents/GA/cai-li/film/src/reportWebVitals.js":"2","/Users/cai/Documents/GA/cai-li/film/src/components/FilmRow/index.js":"3","/Users/cai/Documents/GA/cai-li/film/src/components/FilmDetail/index.js":"4","/Users/cai/Documents/GA/cai-li/film/src/components/FilmLibrary/index.js":"5","/Users/cai/Documents/GA/cai-li/film/src/components/FilmLibrary/TMDB.js":"6","/Users/cai/Documents/GA/cai-li/film/src/components/App/index.js":"7"},{"size":546,"mtime":1656381510071,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1651721780000,"results":"10","hashOfConfig":"9"},{"size":1027,"mtime":1657115614298,"results":"11","hashOfConfig":"9"},{"size":1026,"mtime":1657106136238,"results":"12","hashOfConfig":"9"},{"size":5380,"mtime":1657115781380,"results":"13","hashOfConfig":"9"},{"size":3705,"mtime":1656936939784,"results":"14","hashOfConfig":"9"},{"size":118,"mtime":1656381578863,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"100r94h",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/cai/Documents/GA/cai-li/film/src/index.js",[],[],[],"/Users/cai/Documents/GA/cai-li/film/src/reportWebVitals.js",[],[],"/Users/cai/Documents/GA/cai-li/film/src/components/FilmRow/index.js",[],[],[],"/Users/cai/Documents/GA/cai-li/film/src/components/FilmDetail/index.js",[],[],[],"/Users/cai/Documents/GA/cai-li/film/src/components/FilmLibrary/index.js",["41"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./FilmLibrary.css\";\nimport { TMDB, TMDB_API_KEY } from \"./TMDB\";\nimport FilmDetail from \"../FilmDetail\";\nimport FilmRow from \"../FilmRow\";\n\nconst FilmLibrary = () => {\n  const [selectedFilm, setSelectedFilm] = useState(null);\n  const [faveFilms, setFaveFilms] = useState([]);\n  const [listFilms, setListFilms] = useState([]);\n  const [showList, setShowList] = useState([]);\n  const [listFilmsFlag, setListFilmsFlag] = useState(1);\n  const [loadPage, setLoadPage] = useState(2);\n  const [selectYear, setSelectYear] = useState(2022);\n\n  const handleSelectDetail = (film) => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${film.id}?api_key=${TMDB_API_KEY}&language=en-US`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((jsonData) => {\n        setSelectedFilm({\n          id: jsonData.id,\n          title: jsonData.title,\n          poster_path: jsonData.poster_path,\n          backdrop_path: jsonData.backdrop_path,\n          overview: jsonData.overview,\n          release_date: jsonData.release_date,\n          tagline: jsonData.tagline,\n        });\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  const handleSelectFave = (film, isSelectFave, setIsSelectFave) => {\n    if (isSelectFave === \"add_to_queue\") {\n      setFaveFilms([...faveFilms, film]);\n      setIsSelectFave(\"remove_from_queue\");\n    } else if (isSelectFave === \"remove_from_queue\") {\n      setFaveFilms(faveFilms.filter((item) => item.id !== film.id));\n      setIsSelectFave(\"add_to_queue\");\n      if (listFilmsFlag === 0) {\n        setShowList(faveFilms.filter((item) => item.id !== film.id));\n      }\n    }\n  };\n\n  const handleListFilms = (flag) => {\n    if (flag === \"all\") {\n      setShowList(listFilms);\n      setListFilmsFlag(1);\n    } else if (flag === \"faves\") {\n      setShowList(faveFilms);\n      setListFilmsFlag(0);\n    }\n  };\n\n  const handleLoadMoreFilms = () => {\n    setLoadPage(loadPage + 1);\n    fetch(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&primary_release_year=${selectYear}&sort_by=popularity.desc&page=${loadPage}`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((jsonData) => {\n        // console.log(jsonData.results);\n        setListFilms(listFilms.concat(jsonData.results));\n        setShowList(listFilms.concat(jsonData.results));\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  const handleSelectYear = (e) => {\n    fetch(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&primary_release_year=${e.target.value}&sort_by=popularity.desc`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((jsonData) => {\n        // console.log(jsonData.results);\n        setListFilms(jsonData.results);\n        if (listFilmsFlag === 1) {\n          setShowList(jsonData.results);\n        }\n      })\n      .catch((error) => console.log(error.message));\n    setSelectYear(e.target.value);\n    setLoadPage(2);\n  };\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${TMDB_API_KEY}&primary_release_year=2022&sort_by=popularity.desc`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((jsonData) => {\n        // console.log(jsonData.results);\n        setListFilms(jsonData.results);\n        setShowList(jsonData.results);\n      })\n      .catch((error) => console.log(error.message));\n  }, []);\n\n  return (\n    <div className=\"FilmLibrary\">\n      <div className=\"film-list\">\n        <h1 className=\"section-title\">\n          FILMS\n          <span>\n            <input\n              className=\"select-year\"\n              type=\"number\"\n              min=\"1900\"\n              max=\"2022\"\n              step=\"1\"\n              value={selectYear}\n              onChange={handleSelectYear}\n            />\n          </span>\n        </h1>\n        <div className=\"film-list-filters\">\n          <button\n            className={\n              listFilmsFlag === 1\n                ? \"film-list-filter is-active\"\n                : \"film-list-filter\"\n            }\n            onClick={() => handleListFilms(\"all\")}\n          >\n            ALL\n            <span className=\"section-count\">{listFilms.length}</span>\n          </button>\n          <button\n            className={\n              listFilmsFlag === 0\n                ? \"film-list-filter is-active\"\n                : \"film-list-filter\"\n            }\n            onClick={() => handleListFilms(\"faves\")}\n          >\n            FAVES\n            <span className=\"section-count\">{faveFilms.length}</span>\n          </button>\n        </div>\n        {showList.map((film) => {\n          return (\n            <FilmRow\n              key={film.id}\n              film={film}\n              faveFilms={faveFilms}\n              handleSelectDetail={handleSelectDetail}\n              handleSelectFave={handleSelectFave}\n            />\n          );\n        })}\n        {listFilmsFlag ? (\n          <button className=\"load-more\" onClick={handleLoadMoreFilms}>\n            Load more\n          </button>\n        ) : null}\n      </div>\n\n      <div className=\"film-details\">\n        <h1 className=\"section-title\">DETAILS</h1>\n        <FilmDetail film={selectedFilm} />\n      </div>\n    </div>\n  );\n};\n\nexport default FilmLibrary;\n","/Users/cai/Documents/GA/cai-li/film/src/components/FilmLibrary/TMDB.js",[],[],"/Users/cai/Documents/GA/cai-li/film/src/components/App/index.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":14},"no-unused-vars","'TMDB' is defined but never used.","Identifier","unusedVar"]